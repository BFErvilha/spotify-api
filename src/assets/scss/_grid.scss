@import "mixins";

.container {
  width: 100%;

  @include respond-to(mobile) {
    max-width: none;
  }

  @include respond-to(tablet) {
    max-width: 540px; 
  }

  @include respond-to(laptop) {
    max-width: 720px;
  }

  @include respond-to(desktop) {
    max-width: 960px; 
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}

@each $breakpoint in map-keys($breakpoints) {
  @if $breakpoint !=xs {
    @include respond-to($breakpoint) {
      @for $i from 1 through 12 {
        .col-#{$breakpoint}-#{$i} {
          flex: 0 0 percentage($i / 12);
          max-width: percentage($i / 12);
        }
      }
    }
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @if $breakpoint !=xs {
    @include respond-to($breakpoint) {
      .d-#{$breakpoint}-none {
        display: none;
      }
    }
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @if $breakpoint !=xs {
    @include respond-to($breakpoint) {
      @for $i from 1 through 11 {
        .offset-#{$breakpoint}-#{$i} {
          margin-left: percentage($i / 12);
        }
      }
    }
  }
}

@each $align in ('start', 'center', 'end') {
  .align-self-#{$align} {
    align-self: flex-#{$align} !important;
  }
}

@each $order in ('first', 'last', 'unset') {
  .order-#{$order} {
    order: if($order =='first', -1, if($order =='last', 1, 0)) !important;
  }
}

@for $i from 1 through 12 {
  .order-#{$i} {
    order: #{$i} !important;
  }
}